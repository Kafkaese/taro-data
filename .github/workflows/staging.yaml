name: Staging 

on: 
  pull_request:
    types: [opened, reopened, synchronize]

env: 
  ENV: staging

jobs:
  tf-setup:
    name: 'Provision test environment'
    runs-on: ubuntu-latest
    environment: staging
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_postgres_user: ${{ secrets.TF_VAR_postgres_user }}
        TF_VAR_postgres_password: ${{ secrets.TF_VAR_postgres_password }}
    

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
      - name: 'Initialize Terraform'
        working-directory: ./terraform
        run: terraform init
      - name: 'Get state'
        working-directory: ./terraform
        run: terraform plan -refresh-only
      - name: 'Make plan'
        working-directory: ./terraform
        run: terraform plan -out test.tfplan
      - name: 'Apply plan'
        working-directory: ./terraform
        run: terraform apply test.tfplan


  pipeline:
      name: Build and run the pipeline container
      runs-on: ubuntu-latest
      needs: tf-setup
      environment: staging
      steps:
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            file: ./pipeline.Dockerfile
            push: true
            tags: kafkaese/taro:pipeline
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Run the container
          uses: addnab/docker-run-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            image: kafkaese/taro:pipeline
  
  api-deploy:
    name: 'Deploy API'
    needs: tf-setup
    runs-on: ubuntu-latest
    environment: staging
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Login to Azure with service principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ARM_CLIENT_SECRET }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./api.Dockerfile
          push: true
          tags: taroStagingContainerRegistry.azurecr.io/taro:pipeline
  
  tf-destroy:
    name: 'Destroy test environment'
    if: ${{ always() }}
    needs: [tf-setup, pipeline]
    runs-on: ubuntu-latest
    environment: staging
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
      - name: 'Initialize Terraform'
        working-directory: ./terraform
        run: terraform init
      - name: 'Get state'
        working-directory: ./terraform
        run: terraform plan -refresh-only
      - name: 'Make plan'
        working-directory: ./terraform
        run: terraform plan -destroy -out test.tfplan
      - name: 'Apply plan'
        working-directory: ./terraform
        run: terraform apply test.tfplan

  