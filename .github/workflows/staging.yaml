name: Staging 

on: 
  pull_request:
    types: [opened, reopened, synchronize]

env: 
  ENV: staging

jobs:
  tf-setup:
    name: 'Provision test environment'
    runs-on: ubuntu-latest
    environment: staging
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_postgres_user: ${{ secrets.TF_VAR_postgres_user }}
        TF_VAR_postgres_password: ${{ secrets.TF_VAR_postgres_password }}
    

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
      - name: 'Initialize Terraform'
        working-directory: ./terraform
        run: terraform init
      - name: 'Get state'
        working-directory: ./terraform
        run: terraform plan -refresh-only
      - name: 'Make plan'
        working-directory: ./terraform
        run: terraform plan -out test.tfplan
      - name: 'Apply plan'
        working-directory: ./terraform
        run: terraform apply test.tfplan


  tf-destroy:
    name: 'Destroy test environment'
    if: ${{ always() }}
    needs: tf-setup
    runs-on: ubuntu-latest
    environment: staging
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v1
      - name: 'Initialize Terraform'
        working-directory: ./terraform
        run: terraform init
      - name: 'Get state'
        working-directory: ./terraform
        run: terraform plan -refresh-only
      - name: 'Make plan'
        working-directory: ./terraform
        run: terraform plan -destroy -out test.tfplan
      - name: 'Apply plan'
        working-directory: ./terraform
        run: terraform apply test.tfplan

  